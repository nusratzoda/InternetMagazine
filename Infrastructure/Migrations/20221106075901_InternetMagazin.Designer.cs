// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221106075901_InternetMagazin")]
    partial class InternetMagazin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entites.CustomerPurchaces", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomersId")
                        .HasColumnType("integer");

                    b.Property<int>("InstallmentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomersId");

                    b.HasIndex("InstallmentId");

                    b.ToTable("CustomerPurchaces");
                });

            modelBuilder.Entity("Domain.Entites.Customers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Domain.Entites.Installment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChallangeId")
                        .HasColumnType("integer");

                    b.Property<int>("EndInstallement")
                        .HasColumnType("integer");

                    b.Property<int>("Percentage")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChallangeId");

                    b.ToTable("Installments");
                });

            modelBuilder.Entity("Domain.Entites.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Domain.Entites.CustomerPurchaces", b =>
                {
                    b.HasOne("Domain.Entites.Customers", "Customers")
                        .WithMany("CustomerPurchaces")
                        .HasForeignKey("CustomersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entites.Installment", "Installment")
                        .WithMany("CustomerPurchaces")
                        .HasForeignKey("InstallmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");

                    b.Navigation("Installment");
                });

            modelBuilder.Entity("Domain.Entites.Installment", b =>
                {
                    b.HasOne("Domain.Entites.Product", "Product")
                        .WithMany("Installments")
                        .HasForeignKey("ChallangeId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entites.Customers", b =>
                {
                    b.Navigation("CustomerPurchaces");
                });

            modelBuilder.Entity("Domain.Entites.Installment", b =>
                {
                    b.Navigation("CustomerPurchaces");
                });

            modelBuilder.Entity("Domain.Entites.Product", b =>
                {
                    b.Navigation("Installments");
                });
#pragma warning restore 612, 618
        }
    }
}
